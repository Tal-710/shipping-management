/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.shippingmanagement.shipping_service.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ShipmentCreated extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3894640517194620674L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShipmentCreated\",\"namespace\":\"com.shippingmanagement.shipping_service.avro\",\"fields\":[{\"name\":\"shipmentId\",\"type\":\"string\"},{\"name\":\"orderId\",\"type\":\"int\"},{\"name\":\"customerId\",\"type\":\"string\"},{\"name\":\"destinationCountry\",\"type\":\"string\"},{\"name\":\"shipId\",\"type\":\"int\"},{\"name\":\"departureDate\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<ShipmentCreated> ENCODER =
      new BinaryMessageEncoder<ShipmentCreated>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ShipmentCreated> DECODER =
      new BinaryMessageDecoder<ShipmentCreated>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ShipmentCreated> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ShipmentCreated> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ShipmentCreated> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ShipmentCreated>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ShipmentCreated to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ShipmentCreated from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ShipmentCreated instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ShipmentCreated fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence shipmentId;
   private int orderId;
   private java.lang.CharSequence customerId;
   private java.lang.CharSequence destinationCountry;
   private int shipId;
   private java.time.Instant departureDate;
   private java.time.Instant createdAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ShipmentCreated() {}

  /**
   * All-args constructor.
   * @param shipmentId The new value for shipmentId
   * @param orderId The new value for orderId
   * @param customerId The new value for customerId
   * @param destinationCountry The new value for destinationCountry
   * @param shipId The new value for shipId
   * @param departureDate The new value for departureDate
   * @param createdAt The new value for createdAt
   */
  public ShipmentCreated(java.lang.CharSequence shipmentId, java.lang.Integer orderId, java.lang.CharSequence customerId, java.lang.CharSequence destinationCountry, java.lang.Integer shipId, java.time.Instant departureDate, java.time.Instant createdAt) {
    this.shipmentId = shipmentId;
    this.orderId = orderId;
    this.customerId = customerId;
    this.destinationCountry = destinationCountry;
    this.shipId = shipId;
    this.departureDate = departureDate.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return shipmentId;
    case 1: return orderId;
    case 2: return customerId;
    case 3: return destinationCountry;
    case 4: return shipId;
    case 5: return departureDate;
    case 6: return createdAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: shipmentId = (java.lang.CharSequence)value$; break;
    case 1: orderId = (java.lang.Integer)value$; break;
    case 2: customerId = (java.lang.CharSequence)value$; break;
    case 3: destinationCountry = (java.lang.CharSequence)value$; break;
    case 4: shipId = (java.lang.Integer)value$; break;
    case 5: departureDate = (java.time.Instant)value$; break;
    case 6: createdAt = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'shipmentId' field.
   * @return The value of the 'shipmentId' field.
   */
  public java.lang.CharSequence getShipmentId() {
    return shipmentId;
  }


  /**
   * Sets the value of the 'shipmentId' field.
   * @param value the value to set.
   */
  public void setShipmentId(java.lang.CharSequence value) {
    this.shipmentId = value;
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public int getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(int value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.CharSequence getCustomerId() {
    return customerId;
  }


  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.CharSequence value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'destinationCountry' field.
   * @return The value of the 'destinationCountry' field.
   */
  public java.lang.CharSequence getDestinationCountry() {
    return destinationCountry;
  }


  /**
   * Sets the value of the 'destinationCountry' field.
   * @param value the value to set.
   */
  public void setDestinationCountry(java.lang.CharSequence value) {
    this.destinationCountry = value;
  }

  /**
   * Gets the value of the 'shipId' field.
   * @return The value of the 'shipId' field.
   */
  public int getShipId() {
    return shipId;
  }


  /**
   * Sets the value of the 'shipId' field.
   * @param value the value to set.
   */
  public void setShipId(int value) {
    this.shipId = value;
  }

  /**
   * Gets the value of the 'departureDate' field.
   * @return The value of the 'departureDate' field.
   */
  public java.time.Instant getDepartureDate() {
    return departureDate;
  }


  /**
   * Sets the value of the 'departureDate' field.
   * @param value the value to set.
   */
  public void setDepartureDate(java.time.Instant value) {
    this.departureDate = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new ShipmentCreated RecordBuilder.
   * @return A new ShipmentCreated RecordBuilder
   */
  public static com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder newBuilder() {
    return new com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder();
  }

  /**
   * Creates a new ShipmentCreated RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ShipmentCreated RecordBuilder
   */
  public static com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder newBuilder(com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder other) {
    if (other == null) {
      return new com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder();
    } else {
      return new com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder(other);
    }
  }

  /**
   * Creates a new ShipmentCreated RecordBuilder by copying an existing ShipmentCreated instance.
   * @param other The existing instance to copy.
   * @return A new ShipmentCreated RecordBuilder
   */
  public static com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder newBuilder(com.shippingmanagement.shipping_service.avro.ShipmentCreated other) {
    if (other == null) {
      return new com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder();
    } else {
      return new com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder(other);
    }
  }

  /**
   * RecordBuilder for ShipmentCreated instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShipmentCreated>
    implements org.apache.avro.data.RecordBuilder<ShipmentCreated> {

    private java.lang.CharSequence shipmentId;
    private int orderId;
    private java.lang.CharSequence customerId;
    private java.lang.CharSequence destinationCountry;
    private int shipId;
    private java.time.Instant departureDate;
    private java.time.Instant createdAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.shipmentId)) {
        this.shipmentId = data().deepCopy(fields()[0].schema(), other.shipmentId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.orderId)) {
        this.orderId = data().deepCopy(fields()[1].schema(), other.orderId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.customerId)) {
        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.destinationCountry)) {
        this.destinationCountry = data().deepCopy(fields()[3].schema(), other.destinationCountry);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.shipId)) {
        this.shipId = data().deepCopy(fields()[4].schema(), other.shipId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.departureDate)) {
        this.departureDate = data().deepCopy(fields()[5].schema(), other.departureDate);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[6].schema(), other.createdAt);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing ShipmentCreated instance
     * @param other The existing instance to copy.
     */
    private Builder(com.shippingmanagement.shipping_service.avro.ShipmentCreated other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.shipmentId)) {
        this.shipmentId = data().deepCopy(fields()[0].schema(), other.shipmentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orderId)) {
        this.orderId = data().deepCopy(fields()[1].schema(), other.orderId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customerId)) {
        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.destinationCountry)) {
        this.destinationCountry = data().deepCopy(fields()[3].schema(), other.destinationCountry);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.shipId)) {
        this.shipId = data().deepCopy(fields()[4].schema(), other.shipId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.departureDate)) {
        this.departureDate = data().deepCopy(fields()[5].schema(), other.departureDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[6].schema(), other.createdAt);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'shipmentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getShipmentId() {
      return shipmentId;
    }


    /**
      * Sets the value of the 'shipmentId' field.
      * @param value The value of 'shipmentId'.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder setShipmentId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.shipmentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'shipmentId' field has been set.
      * @return True if the 'shipmentId' field has been set, false otherwise.
      */
    public boolean hasShipmentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'shipmentId' field.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder clearShipmentId() {
      shipmentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public int getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder setOrderId(int value) {
      validate(fields()[1], value);
      this.orderId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder clearOrderId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerId() {
      return customerId;
    }


    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder setCustomerId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.customerId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'destinationCountry' field.
      * @return The value.
      */
    public java.lang.CharSequence getDestinationCountry() {
      return destinationCountry;
    }


    /**
      * Sets the value of the 'destinationCountry' field.
      * @param value The value of 'destinationCountry'.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder setDestinationCountry(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.destinationCountry = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'destinationCountry' field has been set.
      * @return True if the 'destinationCountry' field has been set, false otherwise.
      */
    public boolean hasDestinationCountry() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'destinationCountry' field.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder clearDestinationCountry() {
      destinationCountry = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipId' field.
      * @return The value.
      */
    public int getShipId() {
      return shipId;
    }


    /**
      * Sets the value of the 'shipId' field.
      * @param value The value of 'shipId'.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder setShipId(int value) {
      validate(fields()[4], value);
      this.shipId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'shipId' field has been set.
      * @return True if the 'shipId' field has been set, false otherwise.
      */
    public boolean hasShipId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'shipId' field.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder clearShipId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'departureDate' field.
      * @return The value.
      */
    public java.time.Instant getDepartureDate() {
      return departureDate;
    }


    /**
      * Sets the value of the 'departureDate' field.
      * @param value The value of 'departureDate'.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder setDepartureDate(java.time.Instant value) {
      validate(fields()[5], value);
      this.departureDate = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'departureDate' field has been set.
      * @return True if the 'departureDate' field has been set, false otherwise.
      */
    public boolean hasDepartureDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'departureDate' field.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder clearDepartureDate() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[6], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.shippingmanagement.shipping_service.avro.ShipmentCreated.Builder clearCreatedAt() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ShipmentCreated build() {
      try {
        ShipmentCreated record = new ShipmentCreated();
        record.shipmentId = fieldSetFlags()[0] ? this.shipmentId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.orderId = fieldSetFlags()[1] ? this.orderId : (java.lang.Integer) defaultValue(fields()[1]);
        record.customerId = fieldSetFlags()[2] ? this.customerId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.destinationCountry = fieldSetFlags()[3] ? this.destinationCountry : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.shipId = fieldSetFlags()[4] ? this.shipId : (java.lang.Integer) defaultValue(fields()[4]);
        record.departureDate = fieldSetFlags()[5] ? this.departureDate : (java.time.Instant) defaultValue(fields()[5]);
        record.createdAt = fieldSetFlags()[6] ? this.createdAt : (java.time.Instant) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ShipmentCreated>
    WRITER$ = (org.apache.avro.io.DatumWriter<ShipmentCreated>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ShipmentCreated>
    READER$ = (org.apache.avro.io.DatumReader<ShipmentCreated>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










