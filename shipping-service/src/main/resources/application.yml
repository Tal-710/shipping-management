spring:
  application:
    name: shipping-service
  datasource:
    url: jdbc:mysql://localhost:3306/shipping_system
    username: root
    password: mysql
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  kafka:
    bootstrap-servers: localhost:9092
    schema-registry-url: http://localhost:8081

    consumer:
      group-id: shipping-service-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: ${spring.kafka.schema-registry-url}
        specific.avro.reader: true

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: ${spring.kafka.schema-registry-url}
        auto.register.schemas: true

    listener:
      ack-mode: RECORD
      missing-topics-fatal: false

    retry:
      topic:
        dlt-suffix: -dlt
        retry-suffix: -retry

    streams:
      application-id: ${spring.application.name}-streams
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        processing.guarantee: exactly_once_v2
        commit.interval.ms: 1000
        cache.max.bytes.buffering: 0

app:
  kafka:
    topics:
      order-submitted: order-submitted
      shipment-created: shipment-created
      unassigned-shipping-orders: unassigned-shipping-orders-topic

logging:
  level:
    com.shippingmanagement: INFO
    org.apache.kafka: WARN
    org.apache.kafka.streams: INFO
    org.springframework.kafka.retrytopic: DEBUG

server:
  port: 8090